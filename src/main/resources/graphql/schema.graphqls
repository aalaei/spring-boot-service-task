type Query{
    servicesPaged(page: Int, size: Int): [Service]
    services: [Service]
    service(id: ID!): Service
    resources: [Resource]
    resource(id: ID!): Resource
    owners: [Owner]
    owner(id: ID!): Owner
}
type Mutation{
    createService(service: ServiceInput!): Service
    createResource(serviceId: ID!, resource: ResourceInput!): Resource
    createOwner(resourceId: ID!, owner: OwnerInput!): Owner
    updateService(id: ID!, service: ServiceInput!): Service
    updateResource(id: ID!, resource: ResourceInput!): Resource
    updateOwner(id: ID!, owner: OwnerInput!): Owner
    deleteService(id: ID!): Service
    deleteResource(id: ID!): Resource
    deleteOwner(id: ID!): Owner
}
input ServiceInput{
    criticalText: String
    resources: [ResourceInput]
}
input ResourceInput{
    criticalText: String
    owners: [OwnerInput]
}
input OwnerInput{
    criticalText: String
    name: String
    accountNumber: String
    level: Int
}
type Service{
    id: ID!
    criticalText: String
    resources: [Resource]
}
type Resource{
    id: ID!
    criticalText: String
    owners: [Owner]
}
type Owner{
    id: ID!
    criticalText: String
    name: String
    accountNumber: String
    level: Int
}
